boolean isEqual(Tree<Integer>t1,Tree<Integer>t2){
  if(t1==null && t2!=null) return false;
  if(t1!=null && t2 ==null) return false;
  if(t1==null && t2==null) return true;
  if(!t1.value.equals(t2.value)) return false;
  else{
    boolean areLeftEqual=isEqual(t1.left,t2.left);
    boolean areRightEqual= isEqual(t1.right,t2.right);
    return  areLeftEqual &&areRightEqual;
   
  }  
}
 
boolean solution(Tree<Integer> t1, Tree<Integer> t2) {
  if(t2== null)return true;
  else if(t1==null) return false;
  else{
   int t1val=t1.value.intValue();
   int t2val= t2.value.intValue();
   if(t1val== t2val)return isEqual(t1.left,t2.left) && isEqual(t1.right,t2.right);
   else return solution(t1.left,t2) ||solution(t1.right,t2);
  }
} 

